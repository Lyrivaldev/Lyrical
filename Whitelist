local gui = Instance.new("ScreenGui")
gui.Name = "CustomGUI"
gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
gui.ResetOnSpawn = false

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 455, 0, 280)
mainFrame.Position = UDim2.new(0.5, -227, 0.5, -140)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.Parent = gui

local mainFrameStroke = Instance.new("UIStroke")
mainFrameStroke.Color = Color3.fromRGB(255, 0, 0)
mainFrameStroke.Parent = mainFrame

local mainFrameCorner = Instance.new("UICorner")
mainFrameCorner.CornerRadius = UDim.new(0, 8)
mainFrameCorner.Parent = mainFrame

-- Topbar
local topbar = Instance.new("Frame")
topbar.Size = UDim2.new(0, 455, 0, 20)
topbar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
topbar.Parent = mainFrame

local topbarStroke = Instance.new("UIStroke")
topbarStroke.Color = Color3.fromRGB(255, 0, 0)
topbarStroke.Parent = topbar

local topbarCorner = Instance.new("UICorner")
topbarCorner.CornerRadius = UDim.new(0, 8)
topbarCorner.Parent = topbar

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 1, 0)
title.Text = "ZelexOnTop"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Font = Enum.Font.Sarpanch
title.TextSize = 14
title.Parent = topbar

-- Tabs
local tabs = {"Main", "Visual", "Misc"}
local tabFrames = {}

for i, tabName in ipairs(tabs) do
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(0, 150, 0, 20)
    tabButton.Position = UDim2.new(0, (i-1)*150, 0, 20)
    tabButton.Text = tabName
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tabButton.Font = Enum.Font.Sarpanch
    tabButton.TextSize = 14
    tabButton.Parent = mainFrame

    local tabButtonCorner = Instance.new("UICorner")
    tabButtonCorner.CornerRadius = UDim.new(0, 8)
    tabButtonCorner.Parent = tabButton

    local tabFrame = Instance.new("ScrollingFrame")
    tabFrame.Size = UDim2.new(1, 0, 1, -40)
    tabFrame.Position = UDim2.new(0, 0, 0, 40)
    tabFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabFrame.Visible = i == 1
    tabFrame.CanvasSize = UDim2.new(0, 0, 2, 0) -- Adjust based on content
    tabFrame.ScrollBarThickness = 6
    tabFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 0, 0)
    tabFrame.Parent = mainFrame

    local tabFrameCorner = Instance.new("UICorner")
    tabFrameCorner.CornerRadius = UDim.new(0, 8)
    tabFrameCorner.Parent = tabFrame

    tabFrames[tabName] = tabFrame

    tabButton.MouseButton1Click:Connect(function()
        for _, frame in pairs(tabFrames) do
            frame.Visible = false
        end
        tabFrame.Visible = true
    end)
end

-- Section Function
local function createSection(parent, sectionTitle)
    local section = Instance.new("Frame")
    section.Size = UDim2.new(1, -10, 0, 30)
    section.Position = UDim2.new(0, 5, 0, 0)
    section.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    section.Parent = parent

    local sectionCorner = Instance.new("UICorner")
    sectionCorner.CornerRadius = UDim.new(0, 8)
    sectionCorner.Parent = section

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -10, 1, -10)
    titleLabel.Position = UDim2.new(0, 5, 0, 5)
    titleLabel.Text = sectionTitle
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Font = Enum.Font.Sarpanch
    titleLabel.TextSize = 14
    titleLabel.BackgroundTransparency = 1
    titleLabel.Parent = section

    return section
end

-- Toggle Function
local function createToggle(parent, text, callback)
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0, 100, 0, 25)
    toggle.Text = text
    toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    toggle.Font = Enum.Font.Sarpanch
    toggle.TextSize = 14
    toggle.Parent = parent

    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 8)
    toggleCorner.Parent = toggle

    local isOn = false
    toggle.MouseButton1Click:Connect(function()
        isOn = not isOn
        toggle.Text = text .. (isOn and " ON" or " OFF")
        callback(isOn)
    end)
end

-- Button Function
local function createButton(parent, text, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 100, 0, 25)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.Font = Enum.Font.Sarpanch
    button.TextSize = 14
    button.Parent = parent

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button

    button.MouseButton1Click:Connect(callback)
end

-- Textbox Function
local function createTextbox(parent, placeholderText, callback)
    local textbox = Instance.new("TextBox")
    textbox.Size = UDim2.new(0, 100, 0, 25)
    textbox.PlaceholderText = placeholderText
    textbox.TextColor3 = Color3.fromRGB(255, 255, 255)
    textbox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    textbox.Font = Enum.Font.Sarpanch
    textbox.TextSize = 14
    textbox.PlaceholderColor3 = Color3.fromRGB(200, 200, 200)
    textbox.Parent = parent

    local textboxCorner = Instance.new("UICorner")
    textboxCorner.CornerRadius = UDim.new(0, 8)
    textboxCorner.Parent = textbox

    textbox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            callback(textbox.Text)
        end
    end)
end

-- Keybind Function
local function createKeybind(parent, key, callback)
    local keybindButton = Instance.new("TextButton")
    keybindButton.Size = UDim2.new(0, 100, 0, 25)
    keybindButton.Text = "Keybind: " .. key
    keybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    keybindButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    keybindButton.Font = Enum.Font.Sarpanch
    keybindButton.TextSize = 14
    keybindButton.Parent = parent

    local keybindButtonCorner = Instance.new("UICorner")
    keybindButtonCorner.CornerRadius = UDim.new(0, 8)
    keybindButtonCorner.Parent = keybindButton

    local userInputService = game:GetService("UserInputService")
    userInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == Enum.KeyCode[key] then
            callback()
        end
    end)
end

-- Adding UI Elements to Tab1 as an Example
local section1 = createSection(tabFrames["Main"], "Dont turn off bug")
section1.Position = UDim2.new(0, 0, 0, 10)
createToggle(section1, "Camlock", function(state)
    getgenv().Prediction = 0.135
getgenv().Smoothness = 0.9
getgenv().AimPart = "UpperTorso"
getgenv().OldAimpart = "UpperTorso"
getgenv().ShakeValue = 0
getgenv().AutoPred = true

local Tool = Instance.new("Tool")
Tool.RequiresHandle = false
Tool.Name = "Zelex cam"
Tool.Parent = game.Players.LocalPlayer.Backpack

local player = game.Players.LocalPlayer

local function connectCharacterAdded()
    player.CharacterAdded:Connect(onCharacterAdded)
end

connectCharacterAdded()

player.CharacterRemoving:Connect(function()
    Tool.Parent = game.Players.LocalPlayer.Backpack
end)

-- Variables (Service)

local Players = game:GetService("Players")
local RS = game:GetService("RunService")
local WS = game:GetService("Workspace")
local GS = game:GetService("GuiService")
local SG = game:GetService("StarterGui")

-- Variables (regular)

local LP = Players.LocalPlayer
local Mouse = LP:GetMouse()
local Camera = WS.CurrentCamera
local GetGuiInset = GS.GetGuiInset

local AimlockState = true
local Locked
local Victim

local SelectedKey = getgenv().Key
local SelectedDisableKey = getgenv().DisableKey

-- Notification function

function Notify(tx)
    SG:SetCore("SendNotification", {
        Title = "Zelex",
        Text = tx,
        Duration = 5
    })
end

-- Check if aimlock is loaded

if getgenv().Loaded == true then
    Notify("Loaded")
    return
end

getgenv().Loaded = true

-- FOV Circle

local fov = Drawing.new("Circle")
fov.Filled = false
fov.Transparency = 1
fov.Thickness = 1
fov.Color = Color3.fromRGB(255, 255, 0)
fov.NumSides = 1000

-- Functions

function update()
    if getgenv().FOV == true then
        if fov then
            fov.Radius = getgenv().FOVSize * 2
            fov.Visible = getgenv().ShowFOV
            fov.Position = Vector2.new(Mouse.X, Mouse.Y + GetGuiInset(GS).Y)

            return fov
        end
    end
end

function WTVP(arg)
    return Camera:WorldToViewportPoint(arg)
end

function WTSP(arg)
    return Camera.WorldToScreenPoint(Camera, arg)
end

function getClosest()
    local closestPlayer
    local shortestDistance = math.huge

    for i, v in pairs(game.Players:GetPlayers()) do
        local notKO = v.Character:WaitForChild("BodyEffects")["K.O"].Value ~= true
        local notGrabbed = v.Character:FindFirstChild("GRABBING_COINSTRAINT") == nil

        if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild(getgenv().AimPart) and notKO and notGrabbed then
            local pos = Camera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude

            if (getgenv().FOV) then
                if (fov.Radius > magnitude and magnitude < shortestDistance) then
                    closestPlayer = v
                    shortestDistance = magnitude
                end
            else
                if (magnitude < shortestDistance) then
                    closestPlayer = v
                    shortestDistance = magnitude
                end
            end
        end
    end
    return closestPlayer
end

-- Checks if key is down

Tool.Activated:Connect(function()
    if AimlockState == true then
        Locked = not Locked
        if Locked then
            Victim = getClosest()

            Notify("Locked onto: "..tostring(Victim.Character.Humanoid.DisplayName))
        else
            if Victim ~= nil then
                Victim = nil

                Notify("Unlocked!")
            end
        end
    else
        Notify("Aimlock is not enabled!")
    end
end)

-- Loop update FOV and loop camera lock onto target

RS.RenderStepped:Connect(function()
    update()
    if AimlockState == true then
        if Victim ~= nil then
            local shakeOffset = Vector3.new(
                math.random(-getgenv().ShakeValue, getgenv().ShakeValue),
                math.random(-getgenv().ShakeValue, getgenv().ShakeValue),
                math.random(-getgenv().ShakeValue, getgenv().ShakeValue)
            ) * 0.1
local LookPosition = CFrame.new(Camera.CFrame.p, Victim.Character[getgenv().AimPart].Position + (Vector3.new(Victim.Character.HumanoidRootPart.Velocity.X,Victim.Character.HumanoidRootPart.AssemblyAngularVelocity.Y*0.5,Victim.Character.HumanoidRootPart.Velocity.Z)*getgenv().Prediction))+shakeOffset
            Camera.CFrame = Camera.CFrame:Lerp(LookPosition, getgenv().Smoothness)        
    end
end
end)

for _, con in next, getconnections(workspace.CurrentCamera.Changed) do
  task.wait()
    con:Disable()
end
for _, con in next, getconnections(workspace.CurrentCamera:GetPropertyChangedSignal("CFrame")) do
   task.wait()
    con:Disable()
end


while task.wait() do
if getgenv().AutoPred == true then
pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
             split = string.split(pingvalue,'(')
             ping = tonumber(split[1])
 if ping <200 then
        getgenv().Prediction = 0.1973432432343325
    elseif ping < 150 then
        getgenv().Prediction = 0.1922
    elseif ping < 90 then
        getgenv().Prediction = 0.16
    elseif ping < 80 then
        getgenv().Prediction = 0.169
    elseif ping < 70 then
        getgenv().Prediction = 0.1355
    elseif ping < 50 then
        getgenv().Prediction = 0.125
    elseif ping < 40 then
        getgenv().Prediction = 0.12
    elseif ping < 30 then
        getgenv().Prediction = 0.12
    end
end
end
    print("Toggle state: " .. tostring(state))
end)

local section2 = createSection(tabFrames["Main"], "Fov turnoff")
section2.Position = UDim2.new(0, 0, 0, 50)
createButton(section2, "Silent aim", function() 
    getgenv().HitPart = "HumanoidRootPart"
getgenv().Prediction = 0.1485436
getgenv().Enabled = true

-- fov settings
getgenv().ShowFOV = false
getgenv().Filled = false
getgenv().FOVSize = 150
getgenv().FOVTransparency = 1
getgenv().FOVThickness = 2.0
getgenv().FOVColor = Color3.new(0,0,0)

SilentAimFOVCircle = Drawing.new("Circle")
SilentAimFOVCircle.Color = getgenv().FOVColor
SilentAimFOVCircle.Visible = getgenv().ShowFOV
SilentAimFOVCircle.Filled = getgenv().Filled
SilentAimFOVCircle.Radius = getgenv().FOVSize
SilentAimFOVCircle.Transparency = getgenv().FOVTransparency
SilentAimFOVCircle.Thickness = getgenv().FOVThickness

Players = game:GetService("Players")
Camera = workspace.CurrentCamera

SilentAimFOVCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2  - (game:GetService("GuiService"):GetGuiInset().Y/2))

local function getClosestPlayerToCenter()
    local centerScreenPosition = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2  - (game:GetService("GuiService"):GetGuiInset().Y/2))
    local closestPlayer
    local closestDistance = math.huge
    local localPlayer = game.Players.LocalPlayer

    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerRootPart = player.Character.HumanoidRootPart
            local screenPosition, onScreen = workspace.CurrentCamera:WorldToViewportPoint(playerRootPart.Position)

            if onScreen then
                local distance = (centerScreenPosition - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude

                if distance < closestDistance and distance <= SilentAimFOVCircle.Radius then
                    closestPlayer = player
                    closestDistance = distance
                end
            end
        end
    end

    return closestPlayer
end


local SilentTarget = nil

game:GetService("RunService").RenderStepped:Connect(function()
    SilentTarget = getClosestPlayerToCenter()
end)

local mt = getrawmetatable(game)
local old = mt.__namecall
setreadonly(mt, false)
mt.__namecall = newcclosure(function(...)
    local args = {...}
    if getgenv().Enabled and SilentTarget~=nil and SilentTarget.Character and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" then
            args[3] = SilentTarget.Character[getgenv().HitPart].Position + (SilentTarget.Character[getgenv().HitPart].Velocity*getgenv().Prediction)
        return old(unpack(args))
    end
    return old(...)
end)

    print("Button clicked")
end)

local section3 = createSection(tabFrames["Main"], "camlock prediction")
section3.Position = UDim2.new(0, 0, 0, 90)
createTextbox(section3, "Prediction", function(text) 
    print("prediction input: " .. text)
end)

local section4 = createSection(tabFrames["Main"], "silent aim")
section4.Position = UDim2.new(0, 0, 0, 130)
createTextbox(section4, "Prediction", function(text) 
    print("prediction input: " .. text)
end)

local section1 = createSection(tabFrames["Misc"], "Rightclick made by lyrical")
section1.Position = UDim2.new(0, 0, 0, 10)
createButton(section1, "RightClick", function() 
    local Player = game.Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Corporations"
ScreenGui.ResetOnSpawn = false -- Keep the GUI after respawn
ScreenGui.Parent = PlayerGui

local TextButton = Instance.new("TextButton")
TextButton.Name = "Zelex"
TextButton.Parent = ScreenGui
TextButton.BackgroundColor3 = Color3.fromRGB(255,0,0)
TextButton.BackgroundTransparency = 0.5
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(1, -120, 0, 10) -- Adjusted the position to top right corner
TextButton.Size = UDim2.new(0, 100, 0, 18)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "Rightclick"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextSize = 18
local UICorner = Instance.new("UICorner")
UICorner.Parent = TextButton

-- Function to send the keybind
local function OnButtonClick()
    local vim = game:GetService("VirtualInputManager")
    vim:SendKeyEvent(true, "ButtonL2", false, game)
end

TextButton.MouseButton1Click:Connect(OnButtonClick)
    print("Button clicked")
end)

local section2 = createSection(tabFrames["Misc"], "Cframe made by lyrical")
section2.Position = UDim2.new(0, 0, 0, 50)
createButton(section2, "Cframe", function() 
    -- Initial values
getgenv().Speed = false
getgenv().SpeedAmount = 2

-- Create a basic GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 100, 0, 18) -- Adjust size to accommodate the button
Frame.Position = UDim2.new(1, -120, 0, 35) -- Adjusted the position to top right corner
Frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Frame.BackgroundTransparency = 0.5

local ToggleButton = Instance.new("TextButton")
ToggleButton.Text = "Toggle Speed"
ToggleButton.Parent = Frame
ToggleButton.Size = UDim2.new(0, 100, 0, 18)
ToggleButton.BackgroundTransparency = 1
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)

local UICorner = Instance.new("UICorner")
UICorner.Parent = ToggleButton

local function onButtonClicked()
    getgenv().Speed = not getgenv().Speed
end

ToggleButton.MouseButton1Click:Connect(onButtonClicked)

-- Your existing code modified for the GUI
game:GetService("RunService").Stepped:Connect(function()
    local lplr = game.Players.LocalPlayer
    if getgenv().Speed and lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart") and lplr.Character.Humanoid then
        lplr.Character.HumanoidRootPart.CFrame = lplr.Character.HumanoidRootPart.CFrame + lplr.Character.Humanoid.MoveDirection * getgenv().SpeedAmount
    end
end)
    print("Button clicked")
end)

local section3 = createSection(tabFrames["Misc"], "macro made by lyrical")
section3.Position = UDim2.new(0, 0, 0, 90)
createButton(section3, "fake macro", function() 
    -- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ToggleMacroGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 100, 0, 30) -- Adjusted size
toggleButton.Position = UDim2.new(1, -110, 0, 10) -- Positioned at top right corner with a small margin
toggleButton.Text = "Toggle Macro"
toggleButton.Font = Enum.Font.SourceSansBold -- Set font to BuilderSansExtraBold
toggleButton.TextColor3 = Color3.new(1, 1, 1) -- Set text color to white
toggleButton.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1) -- Set background color to dark
toggleButton.Parent = screenGui

-- Create UI corner
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 5) -- Rounded corners
uiCorner.Parent = toggleButton

-- Create Variables
local macroEnabled = false
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local runService = game:GetService("RunService")
local connection
local spinSpeed = 20 -- Default spin speed

-- Function to toggle macro
local function toggleMacro()
    macroEnabled = not macroEnabled
    toggleButton.Text = macroEnabled and "Macro On" or "Macro Off"
    
    if macroEnabled th
